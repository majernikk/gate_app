name: android-release

on:
  push:
    tags:
      - 'v*'   # spustí sa pri pushnutí tagu vX.Y.Z (napr. v1.2.4)

permissions:
  contents: write  # aby vedel vytvoriť Release a nahrať súbory

jobs:
  android-release:
    name: Build & Release Android APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # aby boli dostupné tagy

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 'stable'
          cache: true

      - name: Flutter Pub Get
        run: flutter pub get

      # CI runner nemá local.properties -> vytvoríme ho
      - name: Create android/local.properties for CI
        run: |
          ANDROID_SDK_ROOT="${ANDROID_SDK_ROOT:-/usr/local/lib/android/sdk}"
          echo "sdk.dir=$ANDROID_SDK_ROOT" > android/local.properties
          echo "flutter.sdk=$FLUTTER_HOME" >> android/local.properties
          echo "Created android/local.properties:"
          cat android/local.properties

      # Vytvor key.properties z GitHub Secrets (použije existujúci upload-keystore.jks v repo)
      - name: Create android/key.properties from secrets
        run: |
          cat > android/key.properties <<EOF
          storeFile=app/upload-keystore.jks
          storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}
          keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}
          EOF
          # Zobraz len maskovanú verziu kvôli debug
          cat android/key.properties | sed 's/=.*/=****/g'

      - name: Build Android APK (release, signed)
        run: |
          flutter build apk --release
          ls -al build/app/outputs/flutter-apk

      - name: Rename APK with tag
        id: rename
        run: |
          TAG="${GITHUB_REF#refs/tags/}"
          OUT="build/app/outputs/flutter-apk/app-release-${TAG}.apk"
          mv build/app/outputs/flutter-apk/app-release.apk "$OUT"
          echo "apk_path=$OUT" >> $GITHUB_OUTPUT

      - name: Create GitHub Release and upload APK
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: ${{ steps.rename.outputs.apk_path }}
